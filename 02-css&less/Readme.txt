知识点总结如下：
  1.复习前一天网络相关知识点：
   （1）说一个从输入浏览器的地址（URL）到页面显示，经历了那些过程？
      答：首先通过DNS解析得到IP地址，根据IP地址可找到对应服务器；然后会建立TCP连接（经历了三次握手）；连接建立之后会发出HTTP请求；进行HTTP响应；然后将相应得到的资源发给浏览器进行解析，渲染，显示页面；中断连接（四次挥手）。
        更详细总结：
            a,DNS解析，找到IP地址
            DNS域名解析系统本质上是一个数据服务器，里面存储着域名和IP的对应关系。要想访问一台服务器必须要通过一个IP地址；在最后的时候会得到IP地址，通过IP地址，才能够访问服务器。
            b,根据IP地址，找到对应的服务器，这样就知道要访问那一台服务器啦
            c,建立TCP连接，里面有个三次握手
            d,连接建立完后，发出HTTP请求
            e,服务器根据请求作出HTTP响应
            f,浏览器得到响应内容，进行解析与渲染，并显示
            g,断开连接
         这个过程叫一次HTTP事务。      
      三次握手：客户端向服务器发送连接请求信号；服务器确认接收连接请求信号并向客户端发送连接请求信号；客户端确认接收到信号。
      四次挥手：甲方向乙方发送连接中断信号；乙方确认接收到信号；乙方向甲方发送连接中断信号；甲方确认收到乙方发送的连接中断信号，连接中断。
      为何握手是三次，而挥手是四次？
      因为在建立连接时，客户端与服务器并未有任何通信，而在中断连接时，可能在乙方收到中断信号时会有数据正在传输过程中，所以要求其将所有事情做完后，再发送中断请求的信号，从而中断连接。
   （2）浏览器架构图？浏览器是多进程的么？渲染引擎中主要有什么东西？
      答：浏览器架构图：有用户界面：即用户能看到的浏览器界面；紧接着浏览器引擎：查询和操作渲染引擎（它旁边是数据存储：浏览器中的一个轻量级数据库）；紧接着渲染引擎：负责解析、渲染请求内容；在最后网络，JS解释器，UI后端等并列。
          进程（工厂）：当一个项目运行起来时，就形成了一个进程。进程是操作系统分配和调度资源的基本单位。
          线程（工人）：在一进程下面会有多个线程，而真正干活的就是线程。
          浏览器是多进程的，它可以同时访问多个网站页面，当一个页面未加载出来时，不影响其它页面的响应。
          浏览器的内核：渲染引擎。渲染引擎中具有两个线程（UI线程（他是由HTML和CSS同时组成的）和js线程），它所拥有的这两个线程是相互斥的。
   （3）浏览器想要把一张没有JS的页面渲染出来，他是如何渲染的？
      答：浏览器开一个选项卡，就是一个进程，操作系统就会给这个进程分配cpu和内存。
          进程中有多个线程，在浏览器中有两个线程：一个是js线程，一个是UI线程。对于html,css就是UI线程处理，对于JS就是JS线程处理。
          UI线程指页面的css解析css,形成css规则树；html解析html，形成DOM树；DOM树与css规则树合成渲染树，从而浏览器将页面渲染出来。
   （4）说一下什么是HTTP协议？
      答： HTTP指的是客户端与服务器通信的一套规则（协议）。
           HTTP协议指的是HyperText  Transfer  Protocol;超文本（文字，样式，链接，视频，音频...）传输（客户端与服务器之间的数据交流）协议（规则，学习http，就是学习这个规则，规则里面有很多头）
           HTTP协议（位于应用层的，它仅仅是应用层的一个协议而已）是基于TCP协议的；TCP协议（安全，可靠，但速度慢，耗时）和UDP协议（不安全，不可靠，但速度快）都位于传输层。
   （5）三次握手和四次挥手是发生什么时候？为什么握手是三次，挥手是四次？
      答：答案如题一所示。
   （6）写html标签时，应该注意什么？
      答：不区分大小写，建议小写  
          单标签最好加关闭    <br />  
          双标签要正确嵌套，不要交叉    <h1><p></h1></p>
          双标签要正确关闭  <li><li>

    （7）常用的发起http请求的方式有哪些？
       答： get:从服务器获取数据
        post:向服务器提交数据
    （8）什么是DOM元素？
       答： D：Document 文档--->html文档  
            O：Object   对象---><h1>hello</h1>
            M: Model    模型--->树模型
   （9）客户端与服务器的定义
      答：客户端：浏览器，app，PC
          服务器：一台装有特殊软件的电脑，装不同的软件对外提供不同的服务；由于我们现在没有服务器，我们可以在自已电脑上装一个软件，来提供类似于服务器提供的服务。
  2.第一天HTML相关知识点：
    （1）如何区分标签，属性，DOM元素：  <h1 class="box">hello world</h1>
        答：标签：
            双标签:<h1></h1>   开始标签<h1>   结束标签</h1>   <name></name>
            单标签:<br/>
            属性：
            在开始标签中，可以写xxx="xxx"   xxx="xxx"叫属性，前面是属性名，后面属性值。
            class="box"
            元素（Elements）：
            开始标签+结束标签+属性+标签中的内容 = 元素 = DOM元素  
    （2）HTML中内置的标签：
                结构：html、head、body、title、meta
                文章：h1~h6、p、br、em、strong
                超链接：a
                图片：img
                布局：div、span
                列表：ul（unorder）、ol(order)、li(列表项)、dl(definition)、dt、dd
                表格：table、tr、td、th
                表单：form、input、select、option、textarea
    （3）快捷键盘：
            shift+alt+向下箭头  复制上一行代码 
            shift+alt+f        自动对齐代码形式
            ctrl+/   注释  注释是程序员看的，浏览器会忽略
            F12   鼠标右键盘-->检查 ---> 开发者工具。
------------------------------------------------------------------------------------------------------------
知识点总结如下：
第二天CSS与less预处理器内容：
  （1）CSS代码写的位置可以是哪里？
          开始标签里面:<div style="color: red;">div</div>  用的不多
          head标签里面：在head标签中写style标签，把css代码写在style标签中  基本不用
          外面：在外面建一个out.css文件，通过link标签引入就OK了。最最常用
  （2）CSS预处理器相关概念
          作用：就是让我们写CSS更加的简单，更加的规范，更加的好维护。
          常用的CSS处理器：less、sass、stylus
  （3）CSS字体属性与文本属性
         color：设置字体的颜色
         font-size：设置字体的大小
         font-weight：设置字体的粗细
         font-style：设置字体的是否倾斜
         font-family:设置什么类型的字体
         font:前面几个属性的复合属性
         -------------
         text-decoration:修饰钱
         text-indent:首行空两格
         text-align:文本的对齐方式
         line-height:行高

    上面的属性是具有继承性的。  
  （4）选择器：用于选中某个标签。
      先给一个标签起一个名字，通过#idname来选中
        id      ID选择器
        class   类选择器
        p       标签选择器
        div p   后代选择器
        h1,h2   分组选择器
       :hover   伪类选择器
       *        通配符选择器
       div.box  交集选择器
   选择器的优先级（层叠性）：
      1，自己写的 > 继承过来的
      2，行内的 > 内部的   行内的 > 外部的 
         内部的和外部的优先级一样（遵循就近原则，内部选择器和外部选择器是一样的）  
      行内的>内部的=外部的（就近原则，选择器要一致）>默认的
     3，ID > CLASS > DIV
         可通过钱的多少来区分哪个优先更高   ID:100; CLASS:10; DIV:1
     4，！important
  （5）盒子模型（非常重要！！！！！）相关知识点
       标签是矩形的，这个矩形的标签就是一个盒子，也就是说，我们一张网页，就是一个一个盒子堆起来。

      学习盒子模型也就是说需要学习几个属性，来设置这个盒子模型
          width       盒子内容宽度
          height      盒子内容高度
          padding     盒子的内边距（补白），盒子内容与盒子边框之间的距离，上下左右都有padding
          margin      盒子的外边距  盒子边框之外的距离，也分上右下左
          border      盒子的边框  盒子的边框也是有上边框，右边框，下边框，左边框
          background  盒子背景  背景默认情况下会填充内容和padding

     对于盒子模型的注意点：
        1，对于女标签来说，width和height设置无效
        2，width属性默认值为auto，块元素的贪婪性和行内元素的懒惰性。
        3，对于行内元素而言，其宽度有内容本身决定，而其高度则有font-size决定。
        4，有些标签有默认的padding值，如ul、ol等。*{padding:0}
     其它盒子模型中的细节，下午说。

    男标签：可以设置盒子模型的6大属性。

    总结上午的内容：
       1，CSS     选择器   一堆的CSS属性
       2，关于字体和文本的属性   继承性
       3，less  ----> 至少我们现在要知道less可以嵌套着写css代码
       4，less环境   less.js   
       5，盒子模型
第三天开始：
  CSS调试面板：
    查看样式：样式分成了好几块（在查看面板时，如果有一个属性上面有一个删除线，表示这个属性不起作用）
    第一块：不用管；第二块：针对div写的独有样式，可以通过打钩与否让写的代码是否起作用；第三块：user agent stylesheet  标签的默认样式；第四块：inherited  from XXX  继承的属性
    修改样式（临时性的，一刷新就没有啦）：数值值是数字；颜色为单词，颜色面板，十六进制；字符串
    让某个样式是否起作用：通过打钩，我们自己写的样式优先级是高于继承过来的样式的


  有些标签有默认的样式，这些样式很多我们不需要，我们需要给它重置，一般叫reset，网上有很多的reset.css。
  有些常用的样式，我们会写到commont.css中，用的时候，直接使用commont.css中的类就OK了。

盒子模型六大属性详细解释：
margin:盒子与盒子之间的距离  分上，下，左，右四个方向的margin
1个值  2个值  3个值  4个值
有些标签有默认的margin   *{margin:0}   *可以有人不会用  
margin-top   margin-right  margin-bottom  margin-left 
应用：*{margin:0}   水平居中  网站顶部背景100%宽  版心最新版居中
margin对于男标签在四个方向上都有作用，对于女标签，只在水平方向上有效，在垂直方向上无效
margin重叠（塌陷）：
   2个前提：男标签，垂直方向
   兄弟元素之间的重叠：上面盒子的下margin和下面盒子的上margin重叠，中间的margin大小是取大优先
      解决重叠：  
            方法1：给男的变成不男不女的
            方法2：浮动（浮动元素是不会塌陷的）
   父子元素之间的重叠：父元素设置margin-top和父中第一个子元素设置的margin-top会重叠
      解决重叠：
            方法1：给父元素设置border-top   不想要边框，使用transparent
            方法2：给父元素设置padding-top 
            方法3：给男的变成不男不女的
margin可以设置负值：


border:设置盒子的边框  
border:粗细 线型 颜色   border:1px solid red;
border-top   border-right  border-bottom   border-left  
border-width   border-style   border-color
border-top-width  xxx  
border在页面是占空间的
border可以实现小三角

padding:
内边距，补白   内容与border之间的距离
有些标签有默认的padding   *{padding:0;}
1个值  2个值  3个值  4个值
应用：调整内容与border之间的间隙  
padding在页面是占空间的

content:　内容的宽度和高度
   width:
   height：
   男标签可以设置宽度和高度，女标签不能设置宽度和高度
   女标签它的宽度由内容决定，高度由font-size决定 
   width和height可以设置百分比，是父元素的百分比。

background:
background-color:
background-image:
   1，默认水平和垂直方向都会平铺
   2，如果空间不足，图片也会显示，只是显示不完整
   3，url后面的路径引号可加可不加
   4，背景图片默认会填充border,padding,content
background-repeat:
background-position:
background-attactment:














